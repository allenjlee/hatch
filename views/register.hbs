<!DOCTYPE html>
<html>

<head>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>

    <!-- boostrap and fonts -->
    <link href = "/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Lato|Libre+Baskerville|Libre+Franklin|Pacifico" rel="stylesheet">
    
    <!-- CSS Plugin -->
    <link rel="stylesheet" href="/font-awesome/css/font-awesome.min.css">
    <script src='/js/ajax.js'></script>
    
    <!-- theme css sheets -->
    <link href="/stylesheets/style.css" rel="stylesheet">
    <link href="/stylesheets/login.css" rel="stylesheet">  
    <link rel="icon" type="image/png" href="/img/logo.png">
    <title>Hatch: Register</title>
</head>

<body>
  <nav class="navbar navbar-custom navbar-fixed-top" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <a class="navbar-brand page-scroll" href="/">
                    <span><img src="/img/logo.png" width=25 height=25></span> Hatch
                </a>
            </div>
        </div>
    </nav>
    <div class="signup-page">
      <div class="container">
          <div class="login login-container">
              <img id="hatch-logo" class="login-image" src="/img/logo.png"/>
              <p class="login-name"></p>
          <p id="Authorization" >  Authorize With Google Account First</p>
          <!--Add buttons to initiate auth sequence and sign out-->
        <button class="btn btn-lg btn-primary btn-block btn-signin" id="authorize-button" onclick="handleAuthClick()">Authorize</button>
        <button class="btn btn-lg btn-primary btn-block btn-signin" id="signout-button" onclick="handleSignoutClick()">Google Sign Out</button>
        
          <form id="signup" class = "signup" method="post" action="/login/add">
              <span id= "reauth-email" class="reauth-email"></span>
                <div class="form-group">
                  <input type="username" class="form-control" id="userName" placeholder="Username" name="username">
                </div>
                <div class="form-group">
                  <input type= "password" class="form-control" id="Password" placeholder="Password" name="password">
                </div>
                <div hidden>
                <input type= "name" class="form-control" id="name" placeholder="" name="name">
                </div>
              <button class="btn btn-lg btn-primary btn-block btn-signin" onclick="submitForm()" type="submit">Register</button>
          </form>
          </div>
      </div>
    </div>
    
    <div id="content"></div>


    <script type="text/javascript">
      // Enter an API key from the Google API Console:
      //   https://console.developers.google.com/apis/credentials
      var apiKey = 'AIzaSyCU2ps1u-92ArCXgh2NqUSTcqBCe7QSWMQ';
      // Enter the API Discovery Docs that describes the APIs you want to
      // access. In this example, we are accessing the People API, so we load
      // Discovery Doc found here: https://developers.google.com/people/api/rest/
      var discoveryDocs = ["https://people.googleapis.com/$discovery/rest?version=v1"];
      // Enter a client ID for a web application from the Google API Console:
      //   https://console.developers.google.com/apis/credentials?project=_
      // In your API Console project, add a JavaScript origin that corresponds
      //   to the domain where you will be running the script.
      var clientId = '557591258050-0hoam1pv6a9h8cgqekeju9l054q5c3ck.apps.googleusercontent.com';
      // Enter one or more authorization scopes. Refer to the documentation for
      // the API or https://developers.google.com/people/v1/how-tos/authorizing
      // for details.
      var scopes = "profile";
      var authorizeButton = document.getElementById('authorize-button');
      var signoutButton = document.getElementById('signout-button');
      function handleClientLoad() {
        // Load the API client and auth2 library
        gapi.load('client:auth2', initClient);
      }




      function initClient() {
        gapi.client.init({
            apiKey: apiKey,
            discoveryDocs: discoveryDocs,
            clientId: clientId,
            scope: scopes
        }).then(function () {
          // Listen for sign-in state changes.
          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);
          // Handle the initial sign-in state.
          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
          authorizeButton.onclick = handleAuthClick;
          signoutButton.onclick = handleSignoutClick;
        });
      }


      function updateSigninStatus(isSignedIn) {
        if (isSignedIn) {
          authorizeButton.style.display = 'none';
          signoutButton.style.display = 'block';
          onSignInCallback();
          makeApiCall();
        } else {
          authorizeButton.style.display = 'block';
          signoutButton.style.display = 'none';
        }
      }
      function handleAuthClick(event) {
	 gapi.auth2.getAuthInstance().signIn();
	
       
      }

      function handleSignoutClick(event) {
	makeApiCall();
        gapi.auth2.getAuthInstance().signOut();
	window.location.replace('/');
      }
      // Load the API and make an API call.  Display the results on the screen.
      function makeApiCall() {
	
        gapi.client.people.people.get({
          resourceName: 'people/me'
        }).then(function(resp) {
          var p = document.createElement('p');
          var name = resp.result.names[0].givenName;
          var last= resp.result.names[0].familyName;
          document.getElementById("name").value=name+" "+last;
          document.getElementById('Authorization').appendChild(p);
        });
      }



function onSignInCallback() {
      gapi.client.load('plus', 'v1', apiClientLoaded);
    
    
  }

  /**
   * Sets up an API call after the Google API client loads.
   */
  function apiClientLoaded() {
    gapi.client.plus.people.get({userId: 'me'}).execute(handleEmailResponse);
  }

  /**
   * Response callback for when the API client receives a response.
   *
   * @param resp The API response object with the user email and profile information.
   */
  function handleEmailResponse(resp) {
    var primaryEmail;
    for (var i=0; i < resp.emails.length; i++) {
      if (resp.emails[i].type === 'account') primaryEmail = resp.emails[i].value;
    }
   document.getElementById('userName').value=primaryEmail;
  }


	function submitForm() {
	  if(gapi.auth2.getAuthInstance().isSignedIn.get()){
		var check;
		check=document.getElementById('name').value;
		var realname;
		 gapi.client.people.people.get({
          	resourceName: 'people/me'
        	}).then(function(resp) {
         	  realname = resp.result.names[0].givenName+" "+resp.result.names[0].familyName;
		  
		  if(check==realname)
		  {
			document.getElementById('signup').submit();
		  }
		  else{

			var p = document.createElement('p');
			var name = 'Identity Does Not Match';
			p.appendChild(document.createTextNode(name));
			document.getElementById('content').appendChild(p);
		}
		});
		
		}

    else{

    var p = document.createElement('p');
    var name = 'Please Authorize with your Google Account';
    p.appendChild(document.createTextNode(name));
    document.getElementById('Authorization').appendChild(p);
    }

}

    </script>
    <script async defer src="https://apis.google.com/js/api.js" 
      onload="this.onload=function(){};handleClientLoad()" 
      onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
<p> {{message}} </p>
  </body>


 
</html>